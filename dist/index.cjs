let e=`body`;async function t(t=location.href,r=`body`,i=!1){let a=await fetch(t,{headers:{"htswap-target":r}}),o=new DOMParser().parseFromString(await a.text(),`text/html`),s=o.querySelector(r),c=document.querySelector(r);if(!s||!c){console.error(`HTSWAP: Target "${r}" not found`);return}c.outerHTML=s.outerHTML,e=r,i||history.pushState({target:r,fromUrl:location.href},``,t),n()}function n(){document.querySelectorAll(`a[target]:not([data-registered])`).forEach(e=>{let n=e;n.dataset.registered=`true`,n.onclick=e=>{e.preventDefault(),t(n.href,n.getAttribute(`target`)||`body`,n.hasAttribute(`no-history`))}})}function r(){n(),new MutationObserver(n).observe(document.documentElement,{childList:!0,subtree:!0}),globalThis.addEventListener(`popstate`,n=>t(n.state?.fromUrl??`/`,n.state?.target??e,!0))}r(),exports.htswapInit=r,exports.htswapRegister=n,exports.htswapUpdate=t;