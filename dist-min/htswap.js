let e=`body`;async function t(t=location.href,n=`body`,r=!1){let i=document.querySelector(n);i?.setAttribute(`aria-busy`,`true`);let a=await fetch(t,{headers:{"htswap-target":n}}),o=new DOMParser().parseFromString(await a.text(),`text/html`),s=o.querySelector(n);if(!s||!i)return console.error(`HTSWAP: Target "${n}" not found`);i.outerHTML=s.outerHTML,e=n,r||history.pushState({target:n,fromUrl:location.href},``,t)}function n(){document.querySelectorAll(`[target]:not([data-htswap-assigned])`).forEach(e=>{e.setAttribute(`data-htswap-assigned`,`true`),e instanceof HTMLAnchorElement?e.onclick=n=>{n.preventDefault(),t(e.getAttribute(`href`)||location.href,e.getAttribute(`target`)||`body`,e.hasAttribute(`no-history`))}:e instanceof HTMLFormElement&&(e.onsubmit=n=>{n.preventDefault();let r=e.getAttribute(`action`)||location.href,i=new URLSearchParams(new FormData(e)).toString();t(r+(r.includes(`?`)?`&`:`?`)+i,e.getAttribute(`target`)||`body`,e.hasAttribute(`no-history`))})})}function r(){n(),new MutationObserver(n).observe(document.documentElement,{childList:!0,subtree:!0}),window.addEventListener(`popstate`,n=>t(n.state?.fromUrl??`/`,n.state?.target??e,!0))}r();export{n as htswapAssign,r as htswapInit,t as htswapReplace};